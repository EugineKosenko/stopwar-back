#+title: Обработка статистики

Обработка статистики выполняется централизованно с помощью Web-сервера на =Flask=. Для простоты админку
реализовывать не будем, смотреть статистику будем прямо в базе данных.

* Модуль сервера
:PROPERTIES:
:ID:       b3401286-fe9b-458a-85d8-b58edb5ee672
:END:

#+BEGIN_SRC python :noweb yes :tangle control/__init__.py
  <<control:Импорт>>

  <<control:Параметры>>

  <<control:Определения>>

  <<control:Обработчики>>
#+END_SRC

* Приложение

#+BEGIN_SRC python :noweb-ref control:Импорт
  from flask import Flask
  from config import Config
  from models import db
#+END_SRC

#+BEGIN_SRC python :noweb-ref control:Определения
  app = Flask(__name__)
  app.config.from_object(Config)
  db.init_app(app)
#+END_SRC

* Обработчики

** Регистрация статистики

#+BEGIN_SRC python :noweb-ref control:Импорт
  from flask import request
  from models import Record
#+END_SRC

#+BEGIN_SRC python :noweb yes :noweb-ref control:Обработчики
  @app.route("/record", methods=['POST'])
  def record():
      ip = request.headers['X-Real-Ip'] if 'X-Real-Ip' in request.headers else "127.0.0.1"
      is_exist = Record.query.filter_by(
          url=request.json['url'],
          instance=ip).count()

      if not is_exist:
          record = Record(
              request.json['url'],
              ip,
              0, 0)
      else:
          record = Record.query.filter_by(
              url=request.json['url'],
              instance=ip).one()

      record.success += request.json['success']
      record.failure += request.json['failure']

      db.session.add(record)
      db.session.commit()

      return "Ok"
#+END_SRC

** Получение списка целей

#+BEGIN_SRC python :noweb-ref control:Импорт
  import json
  from flask import make_response
  from models import WebTarget, Source
#+END_SRC

#+begin_src python :noweb yes :noweb-ref control:Обработчики
  @app.route("/targets")
  def targets():
      ip = request.headers['X-Real-Ip'] if 'X-Real-Ip' in request.headers else "127.0.0.1"
      is_exist = Source.query.filter_by(ip=ip).count()
      if is_exist:
          source = Source.query.filter_by(ip=ip).one()
      else:
          source = Source(ip, 0)

      source.treq += 1
      db.session.add(source)
      db.session.commit()

      targets = WebTarget.query.filter_by(is_active=True).order_by(WebTarget.id.desc()).all();
      targets = list(map(lambda t: t.url, targets))
      resp = make_response(json.dumps(targets))
      # resp.headers['Content-Type'] = "application/json; charset=UTF-8"
      return resp
#+end_src

** TODO Получение списка =web=-целей
** TODO Получение списка =socket=-целей

#+BEGIN_SRC python :noweb-ref control:Импорт
  from models import SocketTarget
#+END_SRC

#+begin_src python :noweb yes :noweb-ref control:Обработчики
  @app.route("/targets/socket")
  def socket_targets():
      targets = SocketTarget.query.filter_by(is_active=True).all();
      targets = list(map(lambda t: {
          'address': t.address,
          'port': t.port,
          'proto': t.proto }, targets))
      resp = make_response(json.dumps(targets))
      # resp.headers['Content-Type'] = "application/json; charset=UTF-8"
      return resp
#+end_src

** Главная страница

Главная страница нужна только для раздачи исходного кода =js=-генератора. Сейчас главное назначение этой
страницы обеспечить динамический список целей. См. также [[id:60359459-63a8-47e1-bc8e-5f1657a497f8][Добавить =js=-генератор автоматическое
обновление целей]].

#+BEGIN_SRC python :noweb-ref control:Импорт
  from flask import render_template
#+END_SRC

#+begin_src python :noweb-ref control:Обработчики
  @app.route('/')
  def index1():
      ip = request.headers['X-Real-Ip'] if 'X-Real-Ip' in request.headers else "127.0.0.1"
      is_exist = Source.query.filter_by(ip=ip).count()
      if is_exist:
          source = Source.query.filter_by(ip=ip).one()
      else:
          source = Source(ip, 0)

      source.treq += 1
      db.session.add(source)
      db.session.commit()

      targets = WebTarget.query.filter_by(is_active=True).order_by(WebTarget.id.desc()).all()
      return render_template('jsgen1.html', targets=targets)
#+end_src

